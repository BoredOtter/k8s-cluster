- name: Add Grafana Helm repository
  community.kubernetes.helm_repository:
    name: grafana
    repo_url: https://grafana.github.io/helm-charts

- name: Add Prometheus Helm repository
  community.kubernetes.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts

- name: Add Elastic Helm repository
  community.kubernetes.helm_repository:
    name: elastic
    repo_url: https://helm.elastic.co


- name: Install Harbor with Helm
  community.kubernetes.helm:
    name: harbor
    chart_ref: harbor/harbor
    create_namespace: true
    release_namespace: harbor
    values:
      expose:
        ingress:
          hosts:
            core: harbor.test.boredotter.dev
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        tls:
          certSource: secret
          secret:
            secretName: harbor-tls
      externalURL: https://harbor.test.boredotter.dev

- name: Crete monitoring namespace
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: monitoring
        labels:
          name: monitoring

- name: Install Prometheus with Helm
  community.kubernetes.helm:
    name: prometheus
    chart_ref: prometheus-community/prometheus
    chart_version: 25.8.2
    release_namespace: monitoring

- name: Install Grafana with Helm
  community.kubernetes.helm:
    name: grafana
    chart_ref: grafana/grafana
    release_namespace: monitoring

- name: Create Ingress for Grafana
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        annotations:
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        name: "grafana"
        namespace: "monitoring"
      spec:
        tls:
        - hosts:
          - "grafana.boredotter.dev"
          secretName: "grafana-tls"
        rules:
        - host: "grafana.boredotter.dev"
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: "grafana"
                  port:
                    number: 80