- name: Install Grafana with Helm
  kubernetes.core.helm:
    name: grafana
    chart_ref: grafana/grafana
    release_namespace: monitoring
    values:
    persistence:
      type: pvc
      enabled: true
      storageClassName: local-path
      adminUser: BoredOtter
      adminPassword: admin
      #Existing datasources like Prometheus
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
          - name: Prometheus
            type: prometheus
            url: http://prometheus-server
          - name: Loki
            type: loki
            url: http://loki:3100
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          prometheus-stats:
            gnetId: 2
            revision: 2
            datasource: Prometheus
          node-exporter:
            gnetId: 1860
            revision: 36
            datasource: Prometheus


- name: Create Ingress for Grafana
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        annotations:
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        name: "grafana"
        namespace: "monitoring"
      spec:
        tls:
        - hosts:
          - "grafana.boredotter.dev"
          secretName: "grafana-tls"
        rules:
        - host: "grafana.boredotter.dev"
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: "grafana"
                  port:
                    number: 80
